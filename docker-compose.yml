version: "3.8"

services:
  # Frontend Service
  frontend:
    image: sge2-front
    container_name: sge2-front-container
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "80"
    ports:
      - "3000:80"
    restart: on-failure
    depends_on:
      - backend
    networks:
      - net-front
      - net-nginx
    environment:
      - NODE_ENV=production
      - SERVER_URL=http://backend:3000

  # Backend Service
  backend:
    image: sge2-back
    container_name: sge2-back-container
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "3000"
    ports:
      - "3001:3000"
    depends_on:
      - db
    restart: on-failure
    networks:
      - net-front
      - net-back
      - net-nginx
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://alexander:admin1234@db:5432/sge_2?schema=public

  # Database Service
  db:
    image: postgres:13
    container_name: sge2-db-container
    environment:
      - POSTGRES_DB=sge_2
      - POSTGRES_USER=alexander
      - POSTGRES_PASSWORD=admin1234
    ports:
      - "5455:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - net-back
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "alexander"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NGINX Service
  nginx:
    image: nginx:latest
    container_name: sge2-nginx-container
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - net-nginx

networks:
  net-front:
    driver: bridge
  net-back:
    driver: bridge
  net-nginx:
    driver: bridge

volumes:
  pgdata:
